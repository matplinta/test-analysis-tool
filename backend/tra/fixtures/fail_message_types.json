[
    {
        "model": "tra.failmessagetype",
        "pk": 1,
        "fields": {
            "name": "EGATE print did not match",
            "regex": "NoRegexpMatch:.*after 10 secs to match regexp \\(.*\\) in output",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 2,
        "fields": {
            "name": "MIB-SIB Acquisition Failed",
            "regex": "MibSibAcquisitionFailed",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 3,
        "fields": {
            "name": "RadioHeadTimeoutException",
            "regex": "RadioHeadTimeoutException",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 4,
        "fields": {
            "name": "Cannot find print in syslog",
            "regex": "ParsingFailed:.*syslog",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 5,
        "fields": {
            "name": "Admin API exception",
            "regex": "AdminApiProcedureFailureException",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 6,
        "fields": {
            "name": "Cannot find print in syslog",
            "regex": "Number of messages \\d+ is not.*",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 7,
        "fields": {
            "name": "PDU session setup failure",
            "regex": "It was not possible to find string.*Established PDU session",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 8,
        "fields": {
            "name": "UE register failure",
            "regex": "It was not possible to find string.*Received REGISTRATION COMPLETE",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 9,
        "fields": {
            "name": "Admin API exception",
            "regex": "UnboundLocalError: local variable.*admin_connection.*referenced before assignment",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 10,
        "fields": {
            "name": "PM Counter error",
            "regex": "Value for period \\d+ is \\d+ but expected is",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 11,
        "fields": {
            "name": "PM Counter error",
            "regex": "CounterNotFound",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 12,
        "fields": {
            "name": "PCAP validation failed",
            "regex": "MessageObserverTimeout",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 13,
        "fields": {
            "name": "Handover performed while it should not have been",
            "regex": "NoRegexpMatch: Fail regexp found \\(.*handover.*performed.*\\)",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 14,
        "fields": {
            "name": "Test script error",
            "regex": "No keyword with name",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 15,
        "fields": {
            "name": "Connection to gNB was lost",
            "regex": "NoValidConnectionsError:.*192.168.255.1",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 16,
        "fields": {
            "name": "Admin API exception",
            "regex": "AdminApi.*Exception",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 17,
        "fields": {
            "name": "DTX ratio is to high",
            "regex": "DTX ratio.*is to.*high",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 18,
        "fields": {
            "name": "Object in SCF is present, while it should not be",
            "regex": ".*is present in SCF. This is unexpected",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 19,
        "fields": {
            "name": "Object in SCF is present, while it should not be",
            "regex": ".*is present in SCF, while it should not be",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 20,
        "fields": {
            "name": "Object is missing from SCF",
            "regex": ".*is not present in SCF",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 21,
        "fields": {
            "name": "PCAP validation failed",
            "regex": ".*not found in gNB tcpdump file",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 22,
        "fields": {
            "name": "PM Counter error",
            "regex": "Counter.*does not satisfy the expression",
            "user": 1
        }
    },
    {
        "model": "tra.failmessagetype",
        "pk": 23,
        "fields": {
            "name": "PCAP validation failed",
            "regex": "NoMessageInFlow:.*",
            "user": 1
        }
    }
]