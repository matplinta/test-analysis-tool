# Generated by Django 4.0.3 on 2022-10-21 11:15

from django.db import migrations


def remove_duplicate_tsfs(apps, schema_editor):
    TestSetFilter = apps.get_model("tra", "TestSetFilter")

    for tsf in TestSetFilter.objects.all():
        tsfs_similars = TestSetFilter.objects.exclude(id=tsf.id).filter(test_set_name=tsf.test_set_name,
                                                        test_lab_path=tsf.test_lab_path)

        if tsfs_similars.exists():
            print("similar exists")
            for tsfsimilar in tsfs_similars:
                if tsfsimilar.test_instances.all().exists():
                    print("test_instances_exists")
                else:
                    print("test_instances_do not exist")
                for tsim_ti in tsfsimilar.test_instances.all():
                    tsim_ti.test_set = tsf

                    tsim_ti.save()

        tsf.save()

    for tsf in TestSetFilter.objects.filter(test_instances=None):
        tsf.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('tra', '0013_alter_notification_options_and_more'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_tsfs),
    ]
