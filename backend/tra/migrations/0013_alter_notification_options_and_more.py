# Generated by Django 4.0.3 on 2022-10-21 10:43

from django.db import migrations, models
import django.db.models.deletion


def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    TestSetFilter = apps.get_model("tra", "TestSetFilter")
    TestInstance = apps.get_model("tra", "TestInstance")
    # db_alias = schema_editor.connection.alias

    

    for ti in TestInstance.objects.all():
        ti.testline_type = ti.test_set.testline_type
        ti.save()

    for tsf in TestSetFilter.objects.all():
        tsfs_similars = TestSetFilter.objects.exclude(id=tsf.id).filter(test_set_name=tsf.test_set_name,
                                                        test_lab_path=tsf.test_lab_path,
                                                        branch=tsf.branch)

        tsf.testline_types.add(tsf.testline_type)
        if tsfs_similars.exists():
            for tsfsimilar in tsfs_similars:
                tsf.testline_types.add(tsfsimilar.testline_type)

        tsf.save()
        # tsf.fail_message_type_groups.set(reg_filter.fail_message_type_groups.all())
        # tsf.owners.set(reg_filter.owners.all())
        # tsf.subscribers.set(reg_filter.subscribers.all())


class Migration(migrations.Migration):

    dependencies = [
        ('tra', '0012_alter_notification_user'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='notification',
            options={'ordering': ['-date']},
        ),
        migrations.AddField(
            model_name='testinstance',
            name='testline_type',
            field=models.ForeignKey(blank=True, help_text='Testline type', null=True, on_delete=django.db.models.deletion.CASCADE, to='tra.testlinetype'),
        ),
        migrations.AddField(
            model_name='testsetfilter',
            name='testline_types',
            field=models.ManyToManyField(blank=True, help_text='Testline types used for tests in this TestSet', related_name='test_set_filters', to='tra.testlinetype'),
        ),
        migrations.RunPython(forwards_func),
    ]
