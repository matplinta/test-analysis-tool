# Generated by Django 4.0.3 on 2022-05-27 14:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='HardwareType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LabLocation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('lab_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testline_manager.lablocation')),
            ],
        ),
        migrations.CreateModel(
            name='OneLabReservation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('one_lab_status', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='PowerDistributionUnit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('address', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PowerDistributionUnitPort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('status', models.CharField(blank=True, max_length=30)),
                ('pdu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='testline_manager.powerdistributionunit')),
            ],
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('laboratory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testline_manager.laboratory')),
            ],
        ),
        migrations.CreateModel(
            name='Testline',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('vnc', models.CharField(blank=True, max_length=40, unique=True)),
                ('maintainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rack', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testlines', to='testline_manager.rack')),
            ],
        ),
        migrations.CreateModel(
            name='Topology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('ute_cloud_supported', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='VirtualMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=100, unique=True)),
                ('cpu', models.CharField(blank=True, max_length=10)),
                ('ram', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SwitchPort',
            fields=[
                ('port_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testline_manager.port')),
                ('status', models.CharField(blank=True, max_length=30)),
                ('trunk_mode', models.BooleanField(null=True)),
                ('connected_to', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='switch_port', to='testline_manager.port')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('testline_manager.port',),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('serial_number', models.CharField(max_length=30, unique=True)),
                ('version', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('hardware_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='testline_manager.hardwaretype')),
                ('one_lab_reservation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testline_manager.onelabreservation')),
                ('pdu_port', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testline_manager.powerdistributionunitport')),
                ('testline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testline_manager.testline')),
            ],
        ),
        migrations.AddField(
            model_name='testline',
            name='topologies',
            field=models.ManyToManyField(to='testline_manager.topology'),
        ),
        migrations.AddField(
            model_name='testline',
            name='virtual_machine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testline_manager.virtualmachine'),
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60, unique=True)),
                ('address', models.CharField(max_length=60, unique=True)),
                ('rack', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='switches', to='testline_manager.rack')),
            ],
        ),
        migrations.AddField(
            model_name='powerdistributionunit',
            name='rack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pdus', to='testline_manager.rack'),
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('switch_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vlans', to='testline_manager.switchport')),
            ],
        ),
        migrations.CreateModel(
            name='UnitPort',
            fields=[
                ('port_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='testline_manager.port')),
                ('connected_to', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='unit_port', to='testline_manager.port')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='testline_manager.unit')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('testline_manager.port',),
        ),
        migrations.AddField(
            model_name='switchport',
            name='switch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ports', to='testline_manager.switch'),
        ),
        migrations.AddConstraint(
            model_name='rack',
            constraint=models.UniqueConstraint(fields=('name', 'laboratory'), name='name_lab_uniq'),
        ),
        migrations.AddConstraint(
            model_name='powerdistributionunitport',
            constraint=models.UniqueConstraint(fields=('pdu', 'name'), name='pdu_name_uniq'),
        ),
        migrations.AddConstraint(
            model_name='laboratory',
            constraint=models.UniqueConstraint(fields=('name', 'lab_location'), name='name_labloc_uniq'),
        ),
        migrations.AddConstraint(
            model_name='vlan',
            constraint=models.UniqueConstraint(fields=('switch_port', 'name'), name='switch_port_vlan_uniq'),
        ),
    ]
