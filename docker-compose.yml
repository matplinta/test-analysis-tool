version: "3.9"
   
services:
  db:
    image: postgres
    volumes:
      - ./postgres_db:/var/lib/postgresql/data
    env_file:
      - ./.env

  web:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - logs_storage:${LOGS_STORAGE_PATH}
    ports:
      - "8000:8000"
      - "8888:8888"
    env_file:
      - ./.env
    environment:
      - DEBUG=1
    depends_on:
      - db
      - redis
  
  redis:
    image: redis:6-alpine

  celery_worker:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile.dev
    command: celery -A backend worker -l info
    env_file:
      - ./.env
    environment:
      - DEBUG=1
    depends_on:
      - redis
      - db
    restart: on-failure
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  celery_beat:
    container_name: celery_beat
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile.dev
    command: celery -A backend beat -l info
    env_file:
      - ./.env
    environment:
      - DEBUG=1
    depends_on:
      - redis
      - db
      - celery_worker
      - flower
    restart: on-failure
  
  flower:
    container_name: celery_flower
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile.dev
    command: /start-flower
    env_file:
      - ./.env
    environment:
      - DEBUG=1
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db
      - celery_worker

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    volumes:
      - ./frontend:/frontend
    stdin_open: true
    command: npm start
    ports:
      - 3000:3000
    depends_on:
      - redis
      - db
      - web

volumes:
  logs_storage:
    driver: vieux/sshfs:latest
    driver_opts:
      sshcmd: ${LOGS_STORAGE_SSHCMD}
      password: ${LOGS_STORAGE_PASSWD}
#   postgres_db:
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: './postgres_db'