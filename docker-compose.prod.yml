version: "3.9"
   
services:
  db:
    image: postgres
    container_name: postgres_db
    volumes:
      - postgres_db:/var/lib/postgresql/data
    env_file:
      - ./.postgres.env
  
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    depends_on:
      - db

  web:
    build: 
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    command: /app/wsgi-entrypoint.sh
    volumes:
      - static_volume:/app/django_static
    expose:
      - 8000
    env_file:
      - ./.postgres.env
    depends_on:
      - db
      - redis

  nginx:
    build:
      context: ./frontend
      dockerfile: ../docker/nginx/Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/app/django_static
      - ./docker/nginx/production:/etc/nginx/conf.d
      - /home/ute/ssl:/etc/ssl
    depends_on:
      - web
  
  redis:
    image: redis:6-alpine

  celery_worker:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    command: celery -A backend worker -l info
    env_file:
      - ./.postgres.env
    depends_on:
      - redis
      - db
      - flower
    restart: on-failure
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  celery_beat:
    container_name: celery_beat
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    command: celery -A backend beat -l info
    env_file:
      - ./.postgres.env
    depends_on:
      - redis
      - db
      - flower
    restart: on-failure
  
  flower:
    container_name: celery_flower
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    env_file:
      - ./.postgres.env
    command: /start-flower
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db

volumes:
  postgres_db:
  static_volume: